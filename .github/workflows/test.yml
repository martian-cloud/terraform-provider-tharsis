# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    paths-ignore:
      - "README.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      tharsis:
        image: registry.gitlab.com/infor-cloud/martian-cloud/tharsis/tharsis-all-in-one-docker
        ports:
          - 8000:8000 # API
          - 8080:8080 # Keycloak
        options: >-
          --health-cmd "curl -f http://localhost:8000/health"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
          --health-start-period 30s

    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.0.*"
          - "1.1.*"
          - "1.2.*"
          - "1.3.*"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          THARSIS_ENDPOINT: http://localhost:8000
        run: |
          THARSIS_STATIC_TOKEN=$(curl -L -X POST 'http://localhost:8080/realms/tharsis/protocol/openid-connect/token' \
          -H 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'client_id=tharsis' \
          --data-urlencode 'grant_type=password' --data-urlencode 'scope=openid profile email' \
          --data-urlencode 'username=martian' --data-urlencode 'password=martian' | jq -r '.access_token')
          export THARSIS_STATIC_TOKEN
          go test -v -cover ./internal/provider/
